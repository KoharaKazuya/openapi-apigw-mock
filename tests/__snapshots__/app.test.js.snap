// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`convert from input into expected output converts from first-response-status.yaml 1`] = `
"openapi: 3.0.2
info:
  title: first-response-status
  version: 1.0.0
paths:
  /pets:
    get:
      responses:
        '204':
          description: ''
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '204'
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: mock
            Access-Control-Allow-Methods:
              schema:
                type: mock
            Access-Control-Allow-Headers:
              schema:
                type: mock
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,OPTIONS,HEAD,PATCH,TRACE'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
"
`;

exports[`convert from input into expected output converts from minimal.json 1`] = `
"{
  \\"openapi\\": \\"3.0.2\\",
  \\"info\\": {
    \\"title\\": \\"minimal\\",
    \\"version\\": \\"1.0.0\\"
  },
  \\"paths\\": {}
}"
`;

exports[`convert from input into expected output converts from minimal.yaml 1`] = `
"openapi: 3.0.2
info:
  title: minimal
  version: 1.0.0
paths: {}
"
`;

exports[`convert from input into expected output converts from one-ext-object.yaml 1`] = `
"openapi: 3.0.2
info:
  title: one-ext-object
  version: 1.0.0
paths:
  /pets:
    get:
      responses: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: mock
            Access-Control-Allow-Methods:
              schema:
                type: mock
            Access-Control-Allow-Headers:
              schema:
                type: mock
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,OPTIONS,HEAD,PATCH,TRACE'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
"
`;

exports[`convert from input into expected output converts from openapi-example-response.yaml 1`] = `
"openapi: 3.0.2
info:
  title: openapi-example-response
  version: 1.0.0
paths:
  /pets:
    get:
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
              example: []
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
            responseTemplates:
              application/json: '[]'
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: mock
            Access-Control-Allow-Methods:
              schema:
                type: mock
            Access-Control-Allow-Headers:
              schema:
                type: mock
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,OPTIONS,HEAD,PATCH,TRACE'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
  '/pets/{petId}':
    get:
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
              examples:
                dummy:
                  id: 1234
                  name: hoge
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
            responseTemplates:
              application/json: '{\\"id\\":1234,\\"name\\":\\"hoge\\"}'
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: mock
            Access-Control-Allow-Methods:
              schema:
                type: mock
            Access-Control-Allow-Headers:
              schema:
                type: mock
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,OPTIONS,HEAD,PATCH,TRACE'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
"
`;

exports[`convert from input into expected output converts from reference-object-response.yaml 1`] = `
"openapi: 3.0.2
info:
  title: reference-object-response
  version: 1.0.0
paths:
  /pets:
    get:
      responses:
        '200':
          $ref: '#/components/responses/PetsGetResponse200'
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
            responseTemplates:
              application/json: '[{\\"id\\":0,\\"name\\":\\"\\",\\"tag\\":\\"\\"}]'
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: mock
            Access-Control-Allow-Methods:
              schema:
                type: mock
            Access-Control-Allow-Headers:
              schema:
                type: mock
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,OPTIONS,HEAD,PATCH,TRACE'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
  responses:
    PetsGetResponse200:
      $ref: '#/components/responses/PetsGetResponse200_'
    PetsGetResponse200_:
      description: ''
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Pets'
      headers:
        Access-Control-Allow-Origin:
          schema:
            type: string
"
`;

exports[`convert from input into expected output converts from schema-example-response.yaml 1`] = `
"openapi: 3.0.2
info:
  title: first-response-status
  version: 1.0.0
paths:
  /pets:
    get:
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pets'
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            responseParameters:
              method.response.header.Access-Control-Allow-Origin: '''*'''
            statusCode: '200'
            responseTemplates:
              application/json: '[{\\"id\\":0,\\"name\\":\\"\\",\\"tag\\":\\"\\"}]'
    options:
      responses:
        '200':
          description: 200 response
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: mock
            Access-Control-Allow-Methods:
              schema:
                type: mock
            Access-Control-Allow-Headers:
              schema:
                type: mock
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{\\"statusCode\\":200}'
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Methods: '''GET,PUT,POST,DELETE,OPTIONS,HEAD,PATCH,TRACE'''
              method.response.header.Access-Control-Allow-Headers: >-
                'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'
              method.response.header.Access-Control-Allow-Origin: '''*'''
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Pets:
      type: array
      items:
        $ref: '#/components/schemas/Pet'
"
`;
